{"ast":null,"code":"var _jsxFileName = \"/Users/irmamodzgvrishvili/personal-website/src/Portfolio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DataProjects from \"./components/DataProjects\";\nimport BusinessProcessProjects from \"./components/BusinessProcessProjects\";\nimport TechnicalProjects from \"./components/TechnicalProjects\";\nimport ProjectSortFilter from \"./components/PorjectSortFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Portfolio() {\n  _s();\n  // Define your project data for each category\n  const dataProjects = [\n    // Data project objects\n  ];\n  const businessProcessProjects = [\n    // Business process project objects\n  ];\n  const technicalProjects = [\n    // Technical project objects\n  ];\n\n  // Define state variables for sorting and filtering\n  const [sortKey, setSortKey] = useState(\"name\");\n  const [filterCategory, setFilterCategory] = useState(\"all\");\n\n  // Handle sorting and filtering changes\n  const handleSortChange = key => {\n    setSortKey(key);\n  };\n  const handleFilterChange = category => {\n    setFilterCategory(category);\n  };\n\n  // Filter and sort projects\n  const filteredProjects = [...dataProjects, ...businessProcessProjects, ...technicalProjects].filter(project => {\n    if (filterCategory === \"all\" || project.category === filterCategory) {\n      return true;\n    }\n    return false;\n  });\n  const sortedProjects = filteredProjects.slice().sort((a, b) => {\n    if (sortKey === \"name\") {\n      return a.name.localeCompare(b.name);\n    } else if (sortKey === \"date\") {\n      return new Date(b.date) - new Date(a.date);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectSortFilter, {\n      onSortChange: handleSortChange,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataProjects, {\n      projects: sortedProjects.filter(project => project.category === \"data\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BusinessProcessProjects, {\n      projects: sortedProjects.filter(project => project.category === \"business\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TechnicalProjects, {\n      projects: sortedProjects.filter(project => project.category === \"technical\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Portfolio, \"VVy/SyO3TW7Sk277CODGQPNROso=\");\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useState","DataProjects","BusinessProcessProjects","TechnicalProjects","ProjectSortFilter","jsxDEV","_jsxDEV","Portfolio","_s","dataProjects","businessProcessProjects","technicalProjects","sortKey","setSortKey","filterCategory","setFilterCategory","handleSortChange","key","handleFilterChange","category","filteredProjects","filter","project","sortedProjects","slice","sort","a","b","name","localeCompare","Date","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSortChange","onFilterChange","projects","_c","$RefreshReg$"],"sources":["/Users/irmamodzgvrishvili/personal-website/src/Portfolio.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DataProjects from \"./components/DataProjects\";\nimport BusinessProcessProjects from \"./components/BusinessProcessProjects\";\nimport TechnicalProjects from \"./components/TechnicalProjects\";\nimport ProjectSortFilter from \"./components/PorjectSortFilter\"\n\nfunction Portfolio() {\n  // Define your project data for each category\n  const dataProjects = [\n    // Data project objects\n  ];\n\n  const businessProcessProjects = [\n    // Business process project objects\n  ];\n\n  const technicalProjects = [\n    // Technical project objects\n  ];\n\n  // Define state variables for sorting and filtering\n  const [sortKey, setSortKey] = useState(\"name\");\n  const [filterCategory, setFilterCategory] = useState(\"all\");\n\n  // Handle sorting and filtering changes\n  const handleSortChange = (key) => {\n    setSortKey(key);\n  };\n\n  const handleFilterChange = (category) => {\n    setFilterCategory(category);\n  };\n\n  // Filter and sort projects\n  const filteredProjects = [...dataProjects, ...businessProcessProjects, ...technicalProjects].filter((project) => {\n    if (filterCategory === \"all\" || project.category === filterCategory) {\n      return true;\n    }\n    return false;\n  });\n\n  const sortedProjects = filteredProjects.slice().sort((a, b) => {\n    if (sortKey === \"name\") {\n      return a.name.localeCompare(b.name);\n    } else if (sortKey === \"date\") {\n      return new Date(b.date) - new Date(a.date);\n    }\n    return 0;\n  });\n\n  return (\n    <div className=\"portfolio\">\n      <h1>My Portfolio</h1>\n\n      {/* Add the sorting and filtering controls */}\n      <ProjectSortFilter onSortChange={handleSortChange} onFilterChange={handleFilterChange} />\n\n      <DataProjects projects={sortedProjects.filter((project) => project.category === \"data\")} />\n      <BusinessProcessProjects projects={sortedProjects.filter((project) => project.category === \"business\")} />\n      <TechnicalProjects projects={sortedProjects.filter((project) => project.category === \"technical\")} />\n    </div>\n  );\n}\n\nexport default Portfolio;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}