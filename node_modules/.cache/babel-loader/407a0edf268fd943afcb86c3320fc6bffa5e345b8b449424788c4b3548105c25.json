{"ast":null,"code":"var _jsxFileName = \"/Users/irmamodzgvrishvili/personal-website/src/Portfolio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectCard from './components/ProjectCard';\nimport CategoryName from './components/CategoryName';\nimport './portfolio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Portfolio() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_URL;\n  const [categoryNames, setCategoryNames] = useState({});\n  useEffect(() => {\n    axios.get(`${apiUrl}/api/projects`).then(response => {\n      setProjects(response.data);\n    }).catch(error => {\n      console.error('Error retrieving projects:', error);\n    });\n    axios.get(`${apiUrl}/api/categories`).then(response => {\n      const categoryData = {};\n      response.data.forEach(category => {\n        categoryData[category.Id] = category.Name;\n      });\n      setCategoryNames(categoryData);\n    }).catch(error => {\n      console.error('Error retrieving categories:', error);\n    });\n  }, []);\n  const groupProjectsByCategory = () => {\n    const groupedProjects = {};\n    projects.forEach(project => {\n      if (!groupedProjects[project.CategoryId]) {\n        groupedProjects[project.CategoryId] = [];\n      }\n      groupedProjects[project.CategoryId].push(project);\n    });\n    return groupedProjects;\n  };\n  const renderProjects = () => {\n    const groupedProjects = groupProjectsByCategory();\n    return Object.keys(groupedProjects).map(categoryId => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(CategoryName, {\n          Id: categoryId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }, this), \" Projects\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list\",\n        children: groupedProjects[categoryId].map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n          project: project\n        }, project.Id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, categoryId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio\",\n    children: renderProjects()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Portfolio, \"Y1YyB5K50s5UmgxmHQjexRQEkAE=\");\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProjectCard","CategoryName","jsxDEV","_jsxDEV","Portfolio","_s","projects","setProjects","apiUrl","process","env","REACT_APP_API_URL","categoryNames","setCategoryNames","get","then","response","data","catch","error","console","categoryData","forEach","category","Id","Name","groupProjectsByCategory","groupedProjects","project","CategoryId","push","renderProjects","Object","keys","map","categoryId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irmamodzgvrishvili/personal-website/src/Portfolio.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectCard from './components/ProjectCard';\nimport CategoryName from './components/CategoryName';\nimport './portfolio.css';\n\nfunction Portfolio() {\n  const [projects, setProjects] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_URL;\n  const [categoryNames, setCategoryNames] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(`${apiUrl}/api/projects`)\n      .then((response) => {\n        setProjects(response.data);\n      })\n      .catch((error) => {\n        console.error('Error retrieving projects:', error);\n      });\n\n    axios\n      .get(`${apiUrl}/api/categories`)\n      .then((response) => {\n        const categoryData = {};\n        response.data.forEach((category) => {\n          categoryData[category.Id] = category.Name;\n        });\n        setCategoryNames(categoryData);\n      })\n      .catch((error) => {\n        console.error('Error retrieving categories:', error);\n      });\n  }, []);\n\n  const groupProjectsByCategory = () => {\n    const groupedProjects = {};\n\n    projects.forEach((project) => {\n      if (!groupedProjects[project.CategoryId]) {\n        groupedProjects[project.CategoryId] = [];\n      }\n      groupedProjects[project.CategoryId].push(project);\n    });\n\n    return groupedProjects;\n  };\n\n  const renderProjects = () => {\n    const groupedProjects = groupProjectsByCategory();\n\n    return Object.keys(groupedProjects).map((categoryId) => (\n      <div key={categoryId} className=\"category-container\">\n      <h2> <CategoryName Id={categoryId} /> Projects</h2>\n        <div className=\"project-list\">\n          {groupedProjects[categoryId].map((project) => (\n            <ProjectCard key={project.Id} project={project} />\n          ))}\n        </div>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"portfolio\">\n      {renderProjects()}\n    </div>\n  );\n}\n\nexport default Portfolio;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAC5C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFe,GAAG,CAAE,GAAEN,MAAO,eAAc,CAAC,CAC7BO,IAAI,CAAEC,QAAQ,IAAK;MAClBT,WAAW,CAACS,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;IAEJpB,KAAK,CACFe,GAAG,CAAE,GAAEN,MAAO,iBAAgB,CAAC,CAC/BO,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMK,YAAY,GAAG,CAAC,CAAC;MACvBL,QAAQ,CAACC,IAAI,CAACK,OAAO,CAAEC,QAAQ,IAAK;QAClCF,YAAY,CAACE,QAAQ,CAACC,EAAE,CAAC,GAAGD,QAAQ,CAACE,IAAI;MAC3C,CAAC,CAAC;MACFZ,gBAAgB,CAACQ,YAAY,CAAC;IAChC,CAAC,CAAC,CACDH,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,eAAe,GAAG,CAAC,CAAC;IAE1BrB,QAAQ,CAACgB,OAAO,CAAEM,OAAO,IAAK;MAC5B,IAAI,CAACD,eAAe,CAACC,OAAO,CAACC,UAAU,CAAC,EAAE;QACxCF,eAAe,CAACC,OAAO,CAACC,UAAU,CAAC,GAAG,EAAE;MAC1C;MACAF,eAAe,CAACC,OAAO,CAACC,UAAU,CAAC,CAACC,IAAI,CAACF,OAAO,CAAC;IACnD,CAAC,CAAC;IAEF,OAAOD,eAAe;EACxB,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMJ,eAAe,GAAGD,uBAAuB,CAAC,CAAC;IAEjD,OAAOM,MAAM,CAACC,IAAI,CAACN,eAAe,CAAC,CAACO,GAAG,CAAEC,UAAU,iBACjDhC,OAAA;MAAsBiC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACpDlC,OAAA;QAAAkC,QAAA,GAAI,GAAC,eAAAlC,OAAA,CAACF,YAAY;UAACuB,EAAE,EAAEW;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,aAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDtC,OAAA;QAAKiC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BV,eAAe,CAACQ,UAAU,CAAC,CAACD,GAAG,CAAEN,OAAO,iBACvCzB,OAAA,CAACH,WAAW;UAAkB4B,OAAO,EAAEA;QAAQ,GAA7BA,OAAO,CAACJ,EAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GANEN,UAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOf,CACN,CAAC;EACJ,CAAC;EAED,oBACEtC,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBN,cAAc,CAAC;EAAC;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACpC,EAAA,CA9DQD,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAgElB,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}