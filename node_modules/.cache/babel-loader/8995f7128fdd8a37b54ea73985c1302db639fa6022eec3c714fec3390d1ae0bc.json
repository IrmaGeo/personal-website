{"ast":null,"code":"var _jsxFileName = \"/Users/irmamodzgvrishvili/Downloads/Projects/ReactApps/personal-website/website/src/Projects.jsx\";\n// Portfolio.js\n\nimport React from 'react';\nimport ProjectDetails from './components/ProjectDetails';\nimport './portfolio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Portfolio = () => {\n  // Hardcoded projects and categories\n  const projects = [{\n    Id: 1,\n    CategoryId: 1,\n    Name: 'Project 1',\n    Description: 'Description 1'\n  }, {\n    Id: 2,\n    CategoryId: 2,\n    Name: 'Project 2',\n    Description: 'Description 2'\n  }, {\n    Id: 3,\n    CategoryId: 3,\n    Name: 'Project 3',\n    Description: 'Description 3'\n  }\n  // Add more projects as needed\n  ];\n\n  const categoryNames = {\n    1: 'Data',\n    2: 'Technical',\n    3: 'Business'\n    // Add more categories as needed\n  };\n\n  const groupProjectsByCategory = () => {\n    const groupedProjects = {};\n    projects.forEach(project => {\n      if (!groupedProjects[project.CategoryId]) {\n        groupedProjects[project.CategoryId] = [];\n      }\n      groupedProjects[project.CategoryId].push(project);\n    });\n    return groupedProjects;\n  };\n  const renderProjects = () => {\n    const groupedProjects = groupProjectsByCategory();\n    return Object.keys(groupedProjects).map(categoryId => /*#__PURE__*/_jsxDEV(ProjectDetails, {\n      category: categoryNames[categoryId],\n      projects: groupedProjects[categoryId]\n    }, categoryId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio\",\n    children: renderProjects()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","ProjectDetails","jsxDEV","_jsxDEV","Portfolio","projects","Id","CategoryId","Name","Description","categoryNames","groupProjectsByCategory","groupedProjects","forEach","project","push","renderProjects","Object","keys","map","categoryId","category","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/irmamodzgvrishvili/Downloads/Projects/ReactApps/personal-website/website/src/Projects.jsx"],"sourcesContent":["// Portfolio.js\n\nimport React from 'react';\nimport ProjectDetails from './components/ProjectDetails';\nimport './portfolio.css';\n\nconst Portfolio = () => {\n  // Hardcoded projects and categories\n  const projects = [\n    { Id: 1, CategoryId: 1, Name: 'Project 1', Description: 'Description 1' },\n    { Id: 2, CategoryId: 2, Name: 'Project 2', Description: 'Description 2' },\n    { Id: 3, CategoryId: 3, Name: 'Project 3', Description: 'Description 3' },\n    // Add more projects as needed\n  ];\n\n  const categoryNames = {\n    1: 'Data',\n    2: 'Technical',\n    3: 'Business',\n    // Add more categories as needed\n  };\n\n  const groupProjectsByCategory = () => {\n    const groupedProjects = {};\n\n    projects.forEach((project) => {\n      if (!groupedProjects[project.CategoryId]) {\n        groupedProjects[project.CategoryId] = [];\n      }\n      groupedProjects[project.CategoryId].push(project);\n    });\n\n    return groupedProjects;\n  };\n\n  const renderProjects = () => {\n    const groupedProjects = groupProjectsByCategory();\n\n    return Object.keys(groupedProjects).map((categoryId) => (\n      <ProjectDetails\n        key={categoryId}\n        category={categoryNames[categoryId]}\n        projects={groupedProjects[categoryId]}\n      />\n    ));\n  };\n\n  return <div className=\"portfolio\">{renderProjects()}</div>;\n};\n\nexport default Portfolio;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;EACA,MAAMC,QAAQ,GAAG,CACf;IAAEC,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,WAAW;IAAEC,WAAW,EAAE;EAAgB,CAAC,EACzE;IAAEH,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,WAAW;IAAEC,WAAW,EAAE;EAAgB,CAAC,EACzE;IAAEH,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,WAAW;IAAEC,WAAW,EAAE;EAAgB;EACxE;EAAA,CACD;;EAED,MAAMC,aAAa,GAAG;IACpB,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,WAAW;IACd,CAAC,EAAE;IACH;EACF,CAAC;;EAED,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,eAAe,GAAG,CAAC,CAAC;IAE1BP,QAAQ,CAACQ,OAAO,CAAEC,OAAO,IAAK;MAC5B,IAAI,CAACF,eAAe,CAACE,OAAO,CAACP,UAAU,CAAC,EAAE;QACxCK,eAAe,CAACE,OAAO,CAACP,UAAU,CAAC,GAAG,EAAE;MAC1C;MACAK,eAAe,CAACE,OAAO,CAACP,UAAU,CAAC,CAACQ,IAAI,CAACD,OAAO,CAAC;IACnD,CAAC,CAAC;IAEF,OAAOF,eAAe;EACxB,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMJ,eAAe,GAAGD,uBAAuB,CAAC,CAAC;IAEjD,OAAOM,MAAM,CAACC,IAAI,CAACN,eAAe,CAAC,CAACO,GAAG,CAAEC,UAAU,iBACjDjB,OAAA,CAACF,cAAc;MAEboB,QAAQ,EAAEX,aAAa,CAACU,UAAU,CAAE;MACpCf,QAAQ,EAAEO,eAAe,CAACQ,UAAU;IAAE,GAFjCA,UAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACF,CAAC;EACJ,CAAC;EAED,oBAAOtB,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAEX,cAAc,CAAC;EAAC;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5D,CAAC;AAACG,EAAA,GA1CIxB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}