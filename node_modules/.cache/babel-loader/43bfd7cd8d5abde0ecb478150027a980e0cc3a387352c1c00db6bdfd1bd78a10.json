{"ast":null,"code":"var _jsxFileName = \"/Users/irmamodzgvrishvili/personal-website/src/Portfolio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectCard from './components/ProjectCard';\nimport CategoryName from './components/CategoryName';\nimport './portfolio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Portfolio() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [categoryNames, setCategoryNames] = useState({});\n  const [selectedGroup, setSelectedGroup] = useState(null); // State to track selected group index\n  const [showAllGroups, setShowAllGroups] = useState(true); // State to control showing all groups\n\n  const apiUrl = process.env.REACT_APP_API_URL;\n  useEffect(() => {\n    axios.get(`${apiUrl}/api/projects`).then(response => {\n      setProjects(response.data);\n    }).catch(error => {\n      console.error('Error retrieving projects:', error);\n    });\n    axios.get(`${apiUrl}/api/categories`).then(response => {\n      const categoryData = {};\n      response.data.forEach(category => {\n        categoryData[category.Id] = category.Name;\n      });\n      setCategoryNames(categoryData);\n    }).catch(error => {\n      console.error('Error retrieving categories:', error);\n    });\n  }, []);\n  const toggleShowAllGroups = () => {\n    setShowAllGroups(!showAllGroups);\n    setSelectedGroup(null); // Reset selected group when toggling showAllGroups\n  };\n\n  const renderProjects = () => {\n    if (showAllGroups) {\n      const groupedProjects = groupProjectsByCategory();\n      return Object.keys(groupedProjects).map(categoryId => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(CategoryName, {\n            Id: categoryId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \" Projects\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-list\",\n          children: groupedProjects[categoryId].map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n            project: project\n          }, project.Id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, categoryId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this));\n    } else if (selectedGroup !== null) {\n      const groupedProjects = groupProjectsByCategory();\n      const categoryId = Object.keys(groupedProjects)[selectedGroup];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(CategoryName, {\n            Id: categoryId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \" Projects\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-list\",\n          children: groupedProjects[categoryId].map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n            project: project\n          }, project.Id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const groupProjectsByCategory = () => {\n    const groupedProjects = {};\n    projects.forEach(project => {\n      if (!groupedProjects[project.CategoryId]) {\n        groupedProjects[project.CategoryId] = [];\n      }\n      groupedProjects[project.CategoryId].push(project);\n    });\n    return groupedProjects;\n  };\n  const handleNavigateNext = () => {\n    const groupedProjects = groupProjectsByCategory();\n    if (selectedGroup === null || selectedGroup < Object.keys(groupedProjects).length - 1) {\n      setSelectedGroup(selectedGroup !== null ? selectedGroup + 1 : 0);\n    }\n  };\n  const handleNavigatePrevious = () => {\n    if (selectedGroup !== null && selectedGroup > 0) {\n      setSelectedGroup(selectedGroup - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleShowAllGroups,\n        children: showAllGroups ? 'Show One Card from Each Group' : 'Show All Groups'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), renderProjects(), !showAllGroups && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNavigatePrevious,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNavigateNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Portfolio, \"SByhE+JubrJxN+LfetzbSRpFtLI=\");\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProjectCard","CategoryName","jsxDEV","_jsxDEV","Portfolio","_s","projects","setProjects","categoryNames","setCategoryNames","selectedGroup","setSelectedGroup","showAllGroups","setShowAllGroups","apiUrl","process","env","REACT_APP_API_URL","get","then","response","data","catch","error","console","categoryData","forEach","category","Id","Name","toggleShowAllGroups","renderProjects","groupedProjects","groupProjectsByCategory","Object","keys","map","categoryId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","project","CategoryId","push","handleNavigateNext","length","handleNavigatePrevious","onClick","_c","$RefreshReg$"],"sources":["/Users/irmamodzgvrishvili/personal-website/src/Portfolio.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectCard from './components/ProjectCard';\nimport CategoryName from './components/CategoryName';\nimport './portfolio.css';\n\nfunction Portfolio() {\n  const [projects, setProjects] = useState([]);\n  const [categoryNames, setCategoryNames] = useState({});\n  const [selectedGroup, setSelectedGroup] = useState(null); // State to track selected group index\n  const [showAllGroups, setShowAllGroups] = useState(true); // State to control showing all groups\n\n  const apiUrl = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    axios\n      .get(`${apiUrl}/api/projects`)\n      .then((response) => {\n        setProjects(response.data);\n      })\n      .catch((error) => {\n        console.error('Error retrieving projects:', error);\n      });\n\n    axios\n      .get(`${apiUrl}/api/categories`)\n      .then((response) => {\n        const categoryData = {};\n        response.data.forEach((category) => {\n          categoryData[category.Id] = category.Name;\n        });\n        setCategoryNames(categoryData);\n      })\n      .catch((error) => {\n        console.error('Error retrieving categories:', error);\n      });\n  }, []);\n\n  const toggleShowAllGroups = () => {\n    setShowAllGroups(!showAllGroups);\n    setSelectedGroup(null); // Reset selected group when toggling showAllGroups\n  };\n\n  const renderProjects = () => {\n    if (showAllGroups) {\n      const groupedProjects = groupProjectsByCategory();\n\n      return Object.keys(groupedProjects).map((categoryId) => (\n        <div key={categoryId} className=\"category-container\">\n          <h2>\n            <CategoryName Id={categoryId} /> Projects\n          </h2>\n          <div className=\"project-list\">\n            {groupedProjects[categoryId].map((project) => (\n              <ProjectCard key={project.Id} project={project} />\n            ))}\n          </div>\n        </div>\n      ));\n    } else if (selectedGroup !== null) {\n      const groupedProjects = groupProjectsByCategory();\n      const categoryId = Object.keys(groupedProjects)[selectedGroup];\n\n      return (\n        <div className=\"category-container\">\n          <h2>\n            <CategoryName Id={categoryId} /> Projects\n          </h2>\n          <div className=\"project-list\">\n            {groupedProjects[categoryId].map((project) => (\n              <ProjectCard key={project.Id} project={project} />\n            ))}\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const groupProjectsByCategory = () => {\n    const groupedProjects = {};\n\n    projects.forEach((project) => {\n      if (!groupedProjects[project.CategoryId]) {\n        groupedProjects[project.CategoryId] = [];\n      }\n      groupedProjects[project.CategoryId].push(project);\n    });\n\n    return groupedProjects;\n  };\n\n  const handleNavigateNext = () => {\n    const groupedProjects = groupProjectsByCategory();\n    if (selectedGroup === null || selectedGroup < Object.keys(groupedProjects).length - 1) {\n      setSelectedGroup(selectedGroup !== null ? selectedGroup + 1 : 0);\n    }\n  };\n\n  const handleNavigatePrevious = () => {\n    if (selectedGroup !== null && selectedGroup > 0) {\n      setSelectedGroup(selectedGroup - 1);\n    }\n  };\n\n  return (\n    <div className=\"portfolio\">\n      <div className=\"toggle-button\">\n        <button onClick={toggleShowAllGroups}>\n          {showAllGroups ? 'Show One Card from Each Group' : 'Show All Groups'}\n        </button>\n      </div>\n      {renderProjects()}\n      {!showAllGroups && (\n        <div className=\"navigation-buttons\">\n          <button onClick={handleNavigatePrevious}>Previous</button>\n          <button onClick={handleNavigateNext}>Next</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Portfolio;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}